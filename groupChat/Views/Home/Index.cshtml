@model groupChat.Models.WebsiteVistorData
<link href="~/Content/sweetalert.css" rel="stylesheet" />
<link href="~/Content/chatcss.css" rel="stylesheet" />

<input type="hidden" id="URL" />
<input type="hidden" id="ip" value="@Model.Ip"/>
<input type="hidden" id="city" value="@Model.City"/>
<input type="hidden" id="region" value="@Model.RegionName"/>
<input type="hidden" id="country" value="@Model.Country"/>
<input type="hidden" id="loc" value="@Model.Lat @Model.Lon"/>
<input type="hidden" id="org" value="@Model.Org"/>
<input type="hidden" id="postal" value="@Model.Zip"/>
<input type="hidden" id="mac" value="@Model.MacId" />
<input type="hidden" id="clientMachineName" value="@Model.ClientMachineName" />
<input type="hidden" id="HTTP_USER_AGENT" />
<input type="hidden" id="HTTP_REFERER" />

@*<input type="hidden" id="URL" />
<input type="hidden" id="ip" />
<input type="hidden" id="city" />
<input type="hidden" id="region" />
<input type="hidden" id="country" />
<input type="hidden" id="loc" />
<input type="hidden" id="org" />
<input type="hidden" id="postal" />
<input type="hidden" id="HTTP_USER_AGENT" />
<input type="hidden" id="HTTP_REFERER" />*@

<div class="container display-flex">

    <div class="container form-horizontal left-body">
        <div class="username">
            <span class="label-text txtName" id="copyID"></span>
            <input type="hidden" id="txtName" />
            <span id="connId" class="label label-success label-text hidden"></span>
        </div>
        <input type="text" class="form-control" id="searchbox" placeholder="Search your friend">
        <ul class="nav nav-tabs" id="contactList">
            <li class="navbar-link active">All users</li>
        </ul>
    </div>
    <!--------------------------------------------Real-time Clients Chat Conversation---------------------------------------------------------->
    <div class="container form-horizontal right-body">
        <div class="container-fluid chat-display-border">
            <div id="messagesClient" class="bubble-dialog"></div>
        </div>
        
        <div class="form-group display-flex display-align-bottom">
            <textarea class="form-control" rows="5" id="txtMessageClient"></textarea>
            <input type="button" class="btn btn-primary sendBtn" id="sendBtn" value="Send" />
        </div>
    </div>

</div>
<!--------------------------------------------------------------------------------------------------------------------------------------->


@section scripts {
    <script src="~/Scripts/jquery-3.4.1.min.js"></script>
    <!--sweetalert UI javascript-->
    <script src="~/Content/sweetalert.min.js"></script>
    <script src="~/Scripts/jquery.signalR-2.4.1.min.js"></script>
    <!--Reference the autogenerated SignalR hub script. -->
    <script src="~/signalr/hubs"></script>
    <script type="text/javascript">
        var active_user = "All users";

        function Init() {
            // Proxy created on Page Load
            var chat = $.connection.letsChatHub;
           

            chat.client.addChatMessage = function (name, receiver, message) {
                if (active_user == name && receiver != "All users") {
                    $('#messagesClient').append('<div class="bubble-left">' + message + '<br>' + timeFormat(new Date()) + '</div>');
                    const messageList = document.getElementById("messagesClient");
                    messageList.scrollTop = messageList.scrollHeight;
                    
                } else {
                    if (receiver == active_user && active_user == "All users") {
                        $('#messagesClient').append('<div class="bubble-left">' + name + ':' + message + '<br>' + timeFormat(new Date()) + '</div>');
                        const messageList = document.getElementById("messagesClient");
                        messageList.scrollTop = messageList.scrollHeight;
                    } else if (receiver != active_user && receiver == "All users") {
                        notifyContact(receiver);
                    } else {
                        notifyContact(name);
                    }
                    
                }
                

            };
            
            // Start the connection
            $.connection.hub.start().done(function () {
                //Display Connection ID to USER
                $("#connId").text($.connection.hub.id);
                var data = { UserName: $('#txtName').val(), ConnectionID: $.connection.hub.id }
                console.log("dataToSend", JSON.stringify(data));
                $.ajax({
                    type: "POST",
                    url: "/Home/ajaxSenderUserName",
                    data: JSON.stringify(data),
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (response) {
                        console.log("Response From Server : ", response);
                        
                    },
                    failure: function (response) {
                        //alert(response.responseText);
                    },
                    error: function (response) {
                        //alert(response.responseText);
                    }
                });
                console.log('Now connected, connection ID =' + $.connection.hub.id);
                //call function for taking UserName
                
                /*------------------------FOR PRIVATE CHAT When try to send message-----------------------------------------*/
                $("#sendBtn").click(function () {
                    let userFullName = $('#txtName').val();

                    if ($('#txtMessageClient').val().length != 0) {
                        var innerdata = '<div class="bubble-right">' + $('#txtMessageClient').val() + '<br>' + timeFormat(new Date()) + '</div>'
                        $('#messagesClient').append(innerdata);
                        const messageList = document.getElementById("messagesClient");
                        messageList.scrollTop = messageList.scrollHeight;

                        chat.server.sendChatMessage({ Name: userFullName, Message: $('#txtMessageClient').val(), FriendUniqueId: active_user });
                        $('#txtMessageClient').val('');
                    }
                });

                //Any Error
            }).fail(function (e) {
                console.log(e);
            });
            getContactList();
            loadMessages(active_user);
            
        }
        
        // Get the user name and store it to prepend to messages.
        $(function userName() {
            return swal({
                title: "Lets Chat!",
                text: "<span style='color:#f8bb86;font-weight:700;'>Enter your name:</span>",
                type: "input",
                html: true,
                showCancelButton: true,
                closeOnConfirm: true,
                animation: "slide-from-top",
                inputPlaceholder: "Enter your name"
            },
                function (inputValue) {

                    if (inputValue === false || inputValue === "") {
                        console.log("Entered Name : ", inputValue);
                        return false;
                    } else {

                        console.log("Entered Name : ", inputValue);
                        $('#txtName').val(inputValue);
                        $('.txtName').text(inputValue);

                        //ajaxCall
                        Init();
                    }

                });
        });

        //Script for Copy Connection ID to clipboard
        $("#copyID").click(function () {
            try {
                var copyTextarea = $("#connId");
                var textcopied = copyTextarea.text();
                var connId = document.createElement('input');
                document.body.appendChild(connId);
                connId.value = textcopied;
                connId.select();
                var successful = document.execCommand("copy", false);
                var msg = successful ? 'successful' : 'unsuccessful';
                console.log('Copying text command was ' + msg);
                console.log('Copied text is ' + connId.value);

            } catch (err) {
                console.log('Oops, unable to copy');
            } finally {
                connId.remove();
            }
        })

        $("#searchbox").on("input", function (e) {

            const inputValue = $(this).val();
            if (inputValue == "") {
                getContactList();
            } else {
                $("#contactList").text('');
                $.ajax({
                    url: '/Home/searchUserName',
                    type: 'POST',
                    data: { UserName: inputValue },
                    success: function (response) {
                        //$("#contactList").append('<li class="navbar-link active"><span class="text-left">All users</span></li>')

                        
                        response.users.forEach(user => {
                            if (user.Username != $('#txtName').val()) {
                                $("#contactList").append('<li class="navbar-link">' + user.Username + '</li>')
                            }
                            
                        });

                    },
                    error: function () {
                        console.error('Error sending input to server');
                    }
                });
            }
            
        });

        $(document).on('click', '.navbar-link', function () {
            // Remove 'active' class from all items
            $('.navbar-link').removeClass('active');

            // Add 'active' class to the clicked item
            $(this).addClass('active');
            this.classList.remove("new-message");
            const badge = this.querySelector(".notification-badge");
            if (badge) {
                this.removeChild(badge);
            }

            active_user = $(this).text();
            loadMessages(active_user);

        });

        function getContactList() {
            $("#contactList").text('');
            $.ajax({
                url: '/Home/getContactList',
                type: 'POST',
                data: { UserName: $('#txtName').val() },
                success: function (response) {

                    var innerData = '<li data-username="All users" class="navbar-link ' + (active_user == 'All users' ? ' active' : '') + '">All users</li>';
                   
                    $("#contactList").append(innerData)
                    
                    response.users.forEach(user => {
                        
                        innerData = '<li data-username="' + user.Friend+'" class="navbar-link ' + (active_user == user.Friend ? ' active' : '') + '">' + user.Friend + '</li>';

                        $("#contactList").append(innerData)
                        
                    });

                },
                error: function () {
                    console.error('Error sending input to server');
                }
            });
        }

        function loadMessages(receiver) {
            $('#messagesClient').text('');

            console.log($('#txtName').val(), receiver);

            $.ajax({
                url: '/Home/loadMessages',
                type: 'POST',
                data: { sender: $('#txtName').val(), receiver: receiver },
                success: function (response) {
                    
                    response.messages.forEach(msg => {
                        
                        if (msg.Sender == $('#txtName').val()) {
                            $('#messagesClient').append('<div class="bubble-right">' + msg.Content + '<br>' + timeFormat(getDate(msg.Timestamp)) + '</div>');
                        } else {
                            $('#messagesClient').append('<div class="bubble-left">' + (receiver == "All users" ? msg.Sender + ' : <br>' : "") + msg.Content + '<br>' + timeFormat(getDate(msg.Timestamp)) + '</div>');
                        }
                    });

                    const messageList = document.getElementById("messagesClient");
                    messageList.scrollTop = messageList.scrollHeight;
                    
                },
                error: function () {
                    console.error('Error sending input to server');
                }
            });

        }
        function notifyContact(username) {
            // Find the <li> element with the corresponding username
            const contactItem = document.querySelector(`li[data-username="${username}"]`);
            if (contactItem) {
                // Add a "new-message" class to the <li> for styling (e.g., highlight)
                contactItem.classList.add("new-message");

                // Optionally, add a badge
                if (!contactItem.querySelector(".notification-badge")) {
                    const badge = document.createElement("span");
                    badge.className = "notification-badge";
                    badge.innerText = "1"; // Or increment for multiple messages
                    contactItem.appendChild(badge);
                } else {
                    // Increment the badge count
                    const badge = contactItem.querySelector(".notification-badge");
                    badge.innerText = parseInt(badge.innerText, 10) + 1;
                }
            }
        }

        function getDate(timestamp) {
            const milliseconds = parseInt(timestamp.replace(/\/Date\((\d+)\)\//, "$1"), 10);
            const date = new Date(milliseconds);
            return date;
        }

        function timeFormat(date) {
            // Custom format: YYYY-MM-DD HH:mm:ss
            const formattedDate = `${date.getFullYear()}-${(date.getMonth() + 1)
                .toString()
                .padStart(2, "0")}-${date
                .getDate()
                .toString()
                .padStart(2, "0")} ${date
                .getHours()
                .toString()
                .padStart(2, "0")}:${date
                .getMinutes()
                .toString()
                .padStart(2, "0")}:${date
                .getSeconds()
                .toString()
                    .padStart(2, "0")}`;

            return formattedDate;
        }

    </script>
}
